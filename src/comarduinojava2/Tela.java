/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package comarduinojava2;

import comarduinojava2.serial.SerialCom;
import comarduinojava2.serial.SerialComLeitura;
import java.awt.Color;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author mateus.michels
 */
public class Tela extends javax.swing.JFrame {

    /**
     * Creates new form Tela
     */
    public Tela() {
        initComponents();
        String[] lista = listaPortas.ObterPortas();
        boxlistaPortas.removeAllItems();
        for(int i = 0; i < lista.length; i++){
            if (lista[i] != null){
                boxlistaPortas.addItem(lista[i]);
            }
        }
        pnlBaudrate.setVisible(false);
        pnlLeituras.setVisible(false);
        lblIntervalo.setVisible(false);
        snpIntervalo.setVisible(false);
        lblSegundos.setVisible(false);
        btnIniciar.setVisible(false);
        lblIconState.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        boxlistaPortas = new javax.swing.JComboBox<>();
        btnSeleciona = new javax.swing.JButton();
        pnlBaudrate = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        boxBaudrate = new javax.swing.JComboBox<>();
        btnConectaSerial = new javax.swing.JButton();
        jLabel1231231 = new javax.swing.JLabel();
        lblStatusPorta = new javax.swing.JLabel();
        lblIntervalo = new javax.swing.JLabel();
        lblSegundos = new javax.swing.JLabel();
        btnIniciar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        snpIntervalo = new javax.swing.JSpinner();
        lblIconState = new javax.swing.JLabel();
        pnlLeituras = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        lblTemp = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblUmdAr = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblUmdTerra = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblLumin = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblVolAgua = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblEstadoTorneira = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblFitaLed = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblFaltaLumin = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Selecione a porta: ");

        boxlistaPortas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        boxlistaPortas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Portas", " " }));

        btnSeleciona.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSeleciona.setText("Seleciona");
        btnSeleciona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Selecione a velocidade: ");

        boxBaudrate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        boxBaudrate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9600", "19200", "38400", "57600", "74880", "115200", "230400" }));

        btnConectaSerial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConectaSerial.setText("Conectar");
        btnConectaSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectaSerialActionPerformed(evt);
            }
        });

        jLabel1231231.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1231231.setText("Status:");

        lblStatusPorta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStatusPorta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatusPorta.setText("Aguardando conex√£o");

        lblIntervalo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblIntervalo.setText("Intervalo das leituras:");

        lblSegundos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSegundos.setText("Segundos");

        btnIniciar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnIniciar.setText("Iniciar Leituras");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Desconecta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        snpIntervalo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        snpIntervalo.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));

        lblIconState.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/bullet_ball_grey.png"))); // NOI18N

        javax.swing.GroupLayout pnlBaudrateLayout = new javax.swing.GroupLayout(pnlBaudrate);
        pnlBaudrate.setLayout(pnlBaudrateLayout);
        pnlBaudrateLayout.setHorizontalGroup(
            pnlBaudrateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBaudrateLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlBaudrateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBaudrateLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(6, 6, 6)
                        .addComponent(boxBaudrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnConectaSerial)
                        .addGap(12, 12, 12)
                        .addComponent(jButton1))
                    .addGroup(pnlBaudrateLayout.createSequentialGroup()
                        .addComponent(jLabel1231231)
                        .addGap(6, 6, 6)
                        .addComponent(lblStatusPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBaudrateLayout.createSequentialGroup()
                        .addComponent(lblIntervalo)
                        .addGap(10, 10, 10)
                        .addComponent(snpIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSegundos)
                        .addGap(4, 4, 4)
                        .addComponent(btnIniciar)
                        .addGap(6, 6, 6)
                        .addComponent(lblIconState))))
        );
        pnlBaudrateLayout.setVerticalGroup(
            pnlBaudrateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBaudrateLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnlBaudrateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBaudrateLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel2))
                    .addGroup(pnlBaudrateLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(boxBaudrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBaudrateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnConectaSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)))
                .addGap(6, 6, 6)
                .addGroup(pnlBaudrateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1231231)
                    .addComponent(lblStatusPorta))
                .addGap(11, 11, 11)
                .addGroup(pnlBaudrateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBaudrateLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblIntervalo))
                    .addComponent(snpIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlBaudrateLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblSegundos))
                    .addComponent(btnIniciar)
                    .addGroup(pnlBaudrateLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblIconState))))
        );

        pnlLeituras.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setText("Temperatura:");
        pnlLeituras.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        lblTemp.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblTemp.setText("XX¬∫C");
        pnlLeituras.add(lblTemp, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("Umidade do ar:");
        pnlLeituras.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));

        lblUmdAr.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblUmdAr.setText("XX%");
        pnlLeituras.add(lblUmdAr, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("Umidade da terra:");
        pnlLeituras.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, -1, -1));

        lblUmdTerra.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblUmdTerra.setText("XX%");
        pnlLeituras.add(lblUmdTerra, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel8.setText("Luminosidade:");
        pnlLeituras.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, -1, -1));

        lblLumin.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblLumin.setText("m√©dia");
        pnlLeituras.add(lblLumin, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("Volume de agua:");
        pnlLeituras.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        lblVolAgua.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblVolAgua.setForeground(new java.awt.Color(45, 22, 3));
        lblVolAgua.setText("X.XL");
        pnlLeituras.add(lblVolAgua, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 40, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel9.setText("Torneira D'agua:");
        pnlLeituras.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        lblEstadoTorneira.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblEstadoTorneira.setText("Desligada");
        pnlLeituras.add(lblEstadoTorneira, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel11.setText("Fita de leds:");
        pnlLeituras.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        lblFitaLed.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblFitaLed.setText("Desligado");
        pnlLeituras.add(lblFitaLed, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel13.setText("Tempo sem luz ambiente: ");
        pnlLeituras.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, -1, -1));

        lblFaltaLumin.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblFaltaLumin.setText("0Hrs");
        pnlLeituras.add(lblFaltaLumin, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, -1, -1));

        jLabel6.setFont(new java.awt.Font("Myanmar Text", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("SMART HORTA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1)
                        .addGap(49, 49, 49)
                        .addComponent(boxlistaPortas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSeleciona, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(pnlBaudrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(pnlLeituras, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(boxlistaPortas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSeleciona)))
                .addGap(6, 6, 6)
                .addComponent(pnlBaudrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlLeituras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelecionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionaActionPerformed
        // TODO add your handling code here:
        this.nomePorta  = (String) boxlistaPortas.getModel().getSelectedItem();
        pnlBaudrate.setVisible(true);
        lblStatusPorta.setText("Porta "+nomePorta +" Selecionada");
        
    }//GEN-LAST:event_btnSelecionaActionPerformed

    private void btnConectaSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectaSerialActionPerformed
        // TODO add your handling code here:
        this.baudrate = Integer.parseInt((String) boxBaudrate.getModel().getSelectedItem());
        portaCom = new SerialComLeitura(nomePorta, baudrate, 0);
        portaCom.ObterIdDaPorta();
        portaCom.AbrirPorta();
        portaCom.HabilitarLeitura();
        portaCom.LerDados();
        statusDaPorta = portaCom.getException();
        lblStatusPorta.setText(statusDaPorta);
        if(statusDaPorta .equalsIgnoreCase("Conectado")){
            lblStatusPorta.setForeground(Color.GREEN.darker());
            lblIntervalo.setVisible(true);
            snpIntervalo.setVisible(true);
            lblSegundos.setVisible(true);
            btnIniciar.setVisible(true);
            lblIconState.setVisible(true);
        }
    }//GEN-LAST:event_btnConectaSerialActionPerformed

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        // TODO add your handling code here:
        TEMPO = Integer.parseInt(snpIntervalo.getModel().getValue().toString());
        pnlLeituras.setVisible(true);
        timer();
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        portaCom.ObterIdDaPorta();
        portaCom.FecharCom();
        statusDaPorta = portaCom.getException();
        lblIconState.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/bullet_ball_grey.png"))); // NOI18N
        lblIntervalo.setVisible(false);
        snpIntervalo.setVisible(false);
        lblSegundos.setVisible(false);
        btnIniciar.setVisible(false);
        lblIconState.setVisible(false);
        pnlLeituras.setVisible(false);
        timer();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
        
    }
    
    public void tratMensagemSerial(){
        if(statusDaPorta.equalsIgnoreCase("conectado")){
            lblIconState.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/BolinhaVerde.jpg.png"))); // NOI18N
            String mensagemSerial = "";
            String leituras[] = new String [8];
            int caracteres = 0;
            float faltaLuz = 0;
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                System.out.println("Erro na Thread: " + ex);
            }
            mensagemSerial = portaCom.getDadoslidos();
            int tamanho = mensagemSerial.length();
            if(tamanho >= 112){
                for(int c = 0; c < 8; c++){
                    try{
                        leituras[c] = mensagemSerial.substring(caracteres, caracteres + 16);
                        leituras[c] = leituras[c].substring(leituras[c].indexOf(":") + 1, leituras[c].length()).trim();
                        caracteres += 16;
                    }catch(StringIndexOutOfBoundsException e){
                        System.out.printf("Limite excedido, caractere = %d", caracteres);
                        System.out.println(e);
                        caracteres -= 16;
                    }
                }
            }
            //Dados da temperatura estao na primeira posi√ß√£o de "leituras"
            lblTemp.setText(leituras[0].substring(0, 2) + "¬∫C");
            //Dados da umidade do ar estao na segunda posi√ß√£o de "leituras"
            lblUmdAr.setText(leituras[1]);
            //Dados da umidade da terra estao na terceira posi√ß√£o de "leituras"
            lblUmdTerra.setText(leituras[2]);
            //Dados do volume de agua no reservatorio estao na quarta posi√ß√£o de "leituras"
            lblVolAgua.setText(leituras[3]);
            //Dados da Luminosidade estao na quinta posi√ß√£o de "leituras"
            lblLumin.setText(leituras[4]);
            //Dados do estado da torneira estao na sexta posi√ß√£o de "leituras"
            lblEstadoTorneira.setText(leituras[5]);
            //Dados do estado da fita de leds estao na setima posi√ß√£o de "leituras"
            lblFitaLed.setText(leituras[6]);
            //Dados do tempo sem luz estao na oitava posi√ß√£o de "leituras"
            faltaLuz = Float.parseFloat(leituras[7]);
            //conversao de loops para millisegundos.
            faltaLuz = (float) (faltaLuz * 501.5);
            //millisegundos para minutos arredondados para cima
            int minutos = Math.round(faltaLuz/60000);
            //milissegundos para horas, arredondados para cima
            int horas = Math.round(faltaLuz/3600000);
            //formata√ß√£o hh:mm
            lblFaltaLumin.setText(String.format("%d:%d", horas, minutos)+"hrs");
            //muda o icone que informa o status da leitura, para dar um efeito de "piscando"
            lblIconState.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/bullet_ball_grey.png"))); // NOI18N
            //Chama a funcao que poe cor nos labels.
            colorLabels();
            mensagemSerial = "";
            caracteres = 0;
        }
        //Verifica se esta tudo ok com a porta serial
        statusDaPorta = portaCom.getException();
        lblStatusPorta.setText(statusDaPorta);
    }
    void colorLabels(){
        String statusFitaLed = lblFitaLed.getText();
        String Luminosidade =lblLumin.getText();
        String statusTorneira = lblEstadoTorneira.getText();
        int temperatura, umidadeAr, umidadeTerra;
        float volAgua;
        //@Try: Pega os numeros que estao no label lblTemp e tenta converter para inteiros
        try{
            temperatura = (Integer.parseInt(lblTemp.getText().substring(0, 2).trim()));
            //Colore o label lblTemp de acordo com as temperatudas.
            if(temperatura <= 15){
                lblTemp.setForeground(Color.blue);
            }else if(temperatura < 30){
                lblTemp.setForeground(Color.green.darker());
            }else {
                lblTemp.setForeground(Color.orange);
            }
        //@catch: Se der erro na conversao, retorna uma mensagem no prompt de comando.
        }catch(NumberFormatException e){
            System.out.println("Erro ao converter temperatura para inteiro!");
        }
        //@Try: Pega os numeros que estao no label lblUmdAr e tenta converter para inteiros
        try{
            umidadeAr = Integer.parseInt(lblUmdAr.getText().substring(0, 2).trim());
            //Colore o lblUmdAr de acordo com o valor da umidade
            if(umidadeAr < 20){
                lblUmdAr.setForeground(Color.red);
            }else if(umidadeAr < 40){
                lblUmdAr.setForeground(Color.orange);
            }else if(umidadeAr < 80){
                lblUmdAr.setForeground(Color.green.darker());
            }else {
                lblUmdAr.setForeground(Color.BLUE);
            }
        //@catch: Se der erro na conversao, retorna uma mensagem no prompt de comando.
        }catch(NumberFormatException e){
            System.out.println("Erro ao converter a umidade do ar para inteiro!");
        }
        //@Try: Pega os numeros que estao no label lblUmdTerra e tenta converter para inteiros
        try{
            umidadeTerra = Integer.parseInt(lblUmdTerra.getText().substring(0, 2).trim());
            //Colore o lblumdTerra de acordo com os valores de umidadeTerra
            if(umidadeTerra < 20){
                lblUmdTerra.setForeground(Color.red);
            }else if(umidadeTerra < 40){
                lblUmdTerra.setForeground(Color.orange);
            }else if(umidadeTerra < 80){
                lblUmdTerra.setForeground(new java.awt.Color(120, 64, 34));
            }else {
                lblUmdTerra.setForeground(new java.awt.Color(45, 22, 3));
            }
        //@catch: Se der erro na conversao, retorna uma mensagem no prompt de comando.
        }catch(NumberFormatException e){
            System.out.println("Erro ao converter a umidade da terra para inteiro!");
        }
        //@try: tenta converter os numeros do lblVolAgua para Float
        try{
            volAgua = Float.parseFloat(lblVolAgua.getText().substring(0, 3).trim());
            //Colore o lblVolAgua de acordo com o valor de volAgua
            if(volAgua < 1){
                lblVolAgua.setForeground(Color.red);
            }else if(volAgua < 3){
                lblVolAgua.setForeground(Color.cyan.darker());
            }else {
                lblVolAgua.setForeground(Color.BLUE);
            }
        //@catch: se ocorrer erro na conversao, retorna uma mensagem no prompt de comando
        }catch(NumberFormatException e){
            System.out.println("Erro ao converter o volume de agua para float!");
        }
        //Luminosidade so possui 3 valores possiveis: "baixo", "medio" e "alta"
        //grupo de if else colore o lblLumin de acordo com o valor obtido.
        if(Luminosidade.equalsIgnoreCase("baixo")){
            lblLumin.setForeground(Color.GRAY.darker());
        }else if(Luminosidade.equalsIgnoreCase("media")){
            lblLumin.setForeground(Color.YELLOW);
        }else{
            lblLumin.setForeground(Color.yellow.brighter());
        }
        //satusTorneira so possui 2 valores possiveis: "Ligada" e "Desligada"
        //grupo de if else colore o lblEstadoTorneira de acordo com o valor obtido
        if(statusTorneira.equalsIgnoreCase("Ligada")){
            lblEstadoTorneira.setForeground(Color.BLUE.darker());
        }else{
            lblEstadoTorneira.setForeground(Color.black);
        }
        //satusFitaLed so possui 2 valores possiveis: "Ligada" e "Desligada"
        //grupo de if else colore o lblFitaLed de acordo com o valor obtido
        if(statusFitaLed.equalsIgnoreCase("Ligada")){
            lblFitaLed.setForeground(Color.YELLOW.brighter());
        }else{
            lblFitaLed.setForeground(Color.black);
        }
    }
    //Thread "cronometro" das leituras, responsavel por chamar a funcao 'tratMensagemSerial'
    //em intervalos de tempo predefinido pelo usuario
    public void timer() {
        //cria um objeto Timer
        Timer timer = new Timer();
        //Cria a thread TimerTask(), responsabel por executar o 'tratMensagemSerial'
        TimerTask tarefa = new TimerTask(){
            public void run() {
                try {
                    tratMensagemSerial();
                    logger();
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
        };
        timer.scheduleAtFixedRate(tarefa, TEMPO, TEMPO);
        //Se o statusDaPorta for diferente de "Conectado" encerra a thread
        if(!statusDaPorta.equals("Conectado")){
            tarefa.cancel();
        }
    }
    public void logger(){
        log.analiseTemp(lblTemp.getText());
        log.analiseUmidAr(lblUmdAr.getText());
        log.analiseUmidTerra(lblUmdTerra.getText());
        log.analiseAgua(lblVolAgua.getText());
        log.analiseTorn(lblEstadoTorneira.getText());
        log.analiseLumin(lblFaltaLumin.getText());
        log.analiseFtLed(lblFitaLed.getText());
        log.analiseTimeLuz(lblFaltaLumin.getText());
    }
    
    SerialCom listaPortas = new SerialCom();
    public SerialComLeitura portaCom;
    public String nomePorta;
    public int baudrate;
    public String statusDaPorta;
    public long TEMPO;
    private Logger log = new Logger();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxBaudrate;
    private javax.swing.JComboBox<String> boxlistaPortas;
    private javax.swing.JButton btnConectaSerial;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnSeleciona;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel1231231;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblEstadoTorneira;
    private javax.swing.JLabel lblFaltaLumin;
    private javax.swing.JLabel lblFitaLed;
    private javax.swing.JLabel lblIconState;
    private javax.swing.JLabel lblIntervalo;
    private javax.swing.JLabel lblLumin;
    private javax.swing.JLabel lblSegundos;
    private javax.swing.JLabel lblStatusPorta;
    private javax.swing.JLabel lblTemp;
    private javax.swing.JLabel lblUmdAr;
    private javax.swing.JLabel lblUmdTerra;
    private javax.swing.JLabel lblVolAgua;
    private javax.swing.JPanel pnlBaudrate;
    private javax.swing.JPanel pnlLeituras;
    private javax.swing.JSpinner snpIntervalo;
    // End of variables declaration//GEN-END:variables
}
